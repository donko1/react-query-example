üìã QUERY FILTERS (–¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤)
–ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã:
javascript
import { useQueryClient } from '@tanstack/react-query'

const queryClient = useQueryClient()

1. –û—Ç–º–µ–Ω–∏—Ç—å –í–°–ï –∑–∞–ø—Ä–æ—Å—ã
await queryClient.cancelQueries()

2. –û—Ç–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å—ã —Å –∫–ª—é—á—ë–º ['posts']
await queryClient.cancelQueries({ queryKey: ['posts'] })

3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ –ê–ö–¢–ò–í–ù–´–ï –∑–∞–ø—Ä–æ—Å—ã (–≤–∏–¥–∏–º—ã–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ)
await queryClient.refetchQueries({ type: 'active' })

4. –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–µ—à–∞ –ù–ï–ê–ö–¢–ò–í–ù–´–ï –∑–∞–ø—Ä–æ—Å—ã —Å –∫–ª—é—á—ë–º ['posts']
queryClient.removeQueries({ 
  queryKey: ['posts'], 
  type: 'inactive' 
})
–í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞:
javascript
{
  queryKey: ['posts'],           // –ö–ª—é—á –∑–∞–ø—Ä–æ—Å–∞ (–º–æ–∂–Ω–æ —á–∞—Å—Ç–∏—á–Ω–æ)
  exact: true,                   // –¢–æ–ª—å–∫–æ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–ª—é—á–∞
  type: 'active' | 'inactive' | 'all',  // –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞
  stale: true,                   // –¢–æ–ª—å–∫–æ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ
  fetchStatus: 'fetching',       // –¢–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –≥—Ä—É–∑—è—Ç—Å—è —Å–µ–π—á–∞—Å
  
  // –°–≤–æ–π –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä (—Å–∞–º—ã–π –º–æ—â–Ω—ã–π!)
  predicate: (query) => {
    return query.state.data.length > 10  // —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å—à–µ 10
  }
}
üîÑ MUTATION FILTERS (–¥–ª—è –º—É—Ç–∞—Ü–∏–π)
–ü—Ä–∏–º–µ—Ä—ã:
javascript
// 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –í–û–û–ë–©–ï –≤—ã–ø–æ–ª–Ω—è—é—â–∏–µ—Å—è –º—É—Ç–∞—Ü–∏–∏
const mutatingCount = queryClient.isMutating()

// 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º—É—Ç–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ—Å—Ç–æ–≤
const postMutations = queryClient.isMutating({ 
  mutationKey: ['post'] 
})

// 3. –°–ª–æ–∂–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ predicate
const specificMutation = queryClient.isMutating({
  predicate: (mutation) => {
    return mutation.options.variables?.id === 123
  }
})
üéØ –ö–û–ì–î–ê –≠–¢–û –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨?
–ü—Ä–æ–µ–∫—Ç –º–∞–ª–µ–Ω—å–∫–∏–π ‚Üí —Ñ–∏–ª—å—Ç—Ä—ã –Ω–µ –Ω—É–∂–Ω—ã
javascript
// –•–≤–∞—Ç–∞–µ—Ç —Ä–∞–±–æ—Ç—ã –ø–æ —Ç–æ—á–Ω–æ–º—É –∫–ª—é—á—É
queryClient.invalidateQueries({ queryKey: ['todos'] })
–ü—Ä–æ–µ–∫—Ç —Ä–∞—Å—Ç—ë—Ç ‚Üí —Ñ–∏–ª—å—Ç—Ä—ã —Å–ø–∞—Å–∞—é—Ç
javascript
// –°–∏—Ç—É–∞—Ü–∏—è 1: –£—Ö–æ–¥–∏–º —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Üí –æ—Ç–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è —Å—é–¥–∞ –∑–∞–ø—Ä–æ—Å—ã
useEffect(() => {
  return () => {
    queryClient.cancelQueries({ queryKey: ['page-data'] })
  }
}, [])

// –°–∏—Ç—É–∞—Ü–∏—è 2: –ß–∏—Å—Ç–∏–º –∫–µ—à –æ—Ç "–º—É—Å–æ—Ä–∞" (—Å—Ç–∞—Ä—ã–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã)
queryClient.removeQueries({ 
  queryKey: ['temp-data'], 
  type: 'inactive' 
})

// –°–∏—Ç—É–∞—Ü–∏—è 3: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º—ã—Ö –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const handleRefresh = () => {
  queryClient.refetchQueries({ type: 'active' })
}
üîß –£–¢–ò–õ–ò–¢–´ (–¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö)
javascript
import { matchQuery, matchMutation } from '@tanstack/react-query'

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–¥ —Ñ–∏–ª—å—Ç—Ä
const isMatching = matchQuery(
  { queryKey: ['posts'], type: 'active' },
  –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π–ó–∞–ø—Ä–æ—Å
)

// –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –º—É—Ç–∞—Ü–∏–π
const isMatchingMutation = matchMutation(
  { mutationKey: ['edit'] },
  –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è–ú—É—Ç–∞—Ü–∏—è
)
üí° –ì–õ–ê–í–ù–û–ï –ó–ê–ü–û–ú–ù–ò–¢–¨
–§–∏–ª—å—Ç—Ä—ã = –ø–æ–∏—Å–∫ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –≤ –≤–∞—à–µ–º –∫–µ—à–µ

queryKey - —Å–∞–º—ã–π —á–∞—Å—Ç—ã–π —Ñ–∏–ª—å—Ç—Ä ("–Ω–∞–π–¥–∏ –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å...")

type: 'active'/'inactive' - –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

predicate - —Å—É–ø–µ—Ä-—Å–∏–ª–∞ –¥–ª—è —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏

–ü–æ–∫–∞ –Ω–µ —É—Å–ª–æ–∂–Ω—è–µ—Ç—Å—è –ø—Ä–æ–µ–∫—Ç ‚Üí –º–æ–∂–Ω–æ –∂–∏—Ç—å –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤